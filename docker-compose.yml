version: "3.8"

services:
  web:
    container_name: api
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    volumes:
      - ./exchangerates:/usr/src/app/
    ports:
      - 8000:8000
    depends_on:
      - redis
      - db

  db:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - postgre_bd:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: dev
      POSTGRES_USER: dev
    ports:
      - 5432:5432

  adminer:
    image: adminer
    container_name: adminer_
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db

  redis:
    image: redis
    container_name: redis_
    volumes:
      - redis:/usr/local/etc/redis
      - redis-data:/data
    ports:
      - 6379:6379

  celery:
    container_name: celery_worker_
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: celery -A exchangerates worker -l INFO --pool=solo
    environment:
      - DATABASE_TYPE=sqlite
      - DATABASE_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    volumes:
      - ./exchangerates:/usr/src/app/
    depends_on:
      - redis


  celery-beat:
    container_name: celery-beat_
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: celery -A exchangerates beat -l INFO
    environment:
      - DATABASE_TYPE=sqlite
      - DATABASE_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    volumes:
      - ./exchangerates:/usr/src/app/
    depends_on:
      - redis


volumes:
  redis:
  redis-data:
  postgre_bd: